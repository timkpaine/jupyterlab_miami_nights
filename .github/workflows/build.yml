name: Build

on:
  push:
    branches: main
  pull_request:
    branches: '*'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install node
      uses: actions/setup-node@v3
      with:
       node-version: '14.x'
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        architecture: 'x64'


    - name: Setup pip cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: pip-3.8-${{ hashFiles('package.json') }}
        restore-keys: |
          pip-3.8-
          pip-

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Setup yarn cache
      uses: actions/cache@v3
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          yarn-

    - name: Install dependencies
      run: python -m pip install -U jupyterlab~=3.0 check-manifest
    - name: Build the extension
      run: |
        set -eux
        jlpm
        jlpm run eslint:check
        python -m pip install .

        jupyter labextension list 2>&1 | grep -ie "@timkpaine/jupyterlab_miami_nights.*OK"
        python -m jupyterlab.browser_check
